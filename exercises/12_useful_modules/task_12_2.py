# -*- coding: utf-8 -*-
"""
Задание 12.2


Функция ping_ip_addresses из задания 12.1 принимает только список адресов,
но было бы удобно иметь возможность указывать адреса с помощью диапазона,
например, 192.168.100.1-10.

В этом задании необходимо создать функцию convert_ranges_to_ip_list,
которая конвертирует список IP-адресов в разных форматах в список,
где каждый IP-адрес указан отдельно.

Функция ожидает как аргумент список, в котором содержатся IP-адреса
и/или диапазоны IP-адресов.

Элементы списка могут быть в формате:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Если адрес указан в виде диапазона, надо развернуть диапазон в отдельные
адреса, включая последний адрес диапазона.
Для упрощения задачи, можно считать, что в диапазоне всегда меняется только
последний октет адреса.

Функция возвращает список IP-адресов.

Например, если передать функции convert_ranges_to_ip_list такой список:
['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

Функция должна вернуть такой список:
['8.8.4.4', '1.1.1.1', '1.1.1.2', '1.1.1.3', '172.21.41.128',
 '172.21.41.129', '172.21.41.130', '172.21.41.131', '172.21.41.132']

"""
def convert_ranges_to_ip_list(list_ip):

    list_full_ip = []
    for ip in list_ip:
        if '-' not in ip:
            list_full_ip.append(ip)
        else:
            value = ip.split('-')
            list_actet_ip = []
            for actet_ip in value:
                list_actet_ip.append((actet_ip.split('.'))[-1])
            four_actet_ip = (value[0].split('.'))
            for four_actet_ip[-1] in range(int(list_actet_ip[0]), int(list_actet_ip[1]) + 1):
                new_actet_ip = [str(x) for x in four_actet_ip]
                '.'.join(new_actet_ip)
                list_full_ip.append('.'.join(new_actet_ip))

    return list_full_ip

